name: build & deploy 

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'infrastructure/**'
env:
  AWS_REGION : us-west-2 #Change to reflect your Region

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  Build-and-Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::151389984452:role/github-oidc-role #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: hotel-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:v$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:v$IMAGE_TAG
          docker tag $REGISTRY/$REPOSITORY:v$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest
          
          echo "image=$REGISTRY/$REPOSITORY:v$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition hotel-alb --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./task-definition.json
          container-name: hotel-app 
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: hotel-alb
          cluster: main-cluster
          wait-for-service-stability: true

      - name: Get RDS instance hostname
        id: get-rds-hostname
        run: |
          RDS_HOSTNAME=$(aws rds describe-db-instances \
              --db-instance-identifier postgresql-hotel \
              --query "DBInstances[0].Endpoint.Address" \
              --output text)
          echo "RDS_HOSTNAME=$RDS_HOSTNAME"
          echo "rds_hostname=$RDS_HOSTNAME" >> $GITHUB_OUTPUT
 
      - name: Get EC2 instance ID
        id: get-instance-id
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
              --filters "Name=tag:Name,Values=jumpbox" \
              --query "Reservations[*].Instances[*].InstanceId" \
              --output text)
          echo "INSTANCE_ID=$INSTANCE_ID"
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

      - name: Print instance ID
        run: |

          aws ssm start-session --target ${{ steps.get-instance-id.outputs.instance_id }} --document-name AWS-StartPortForwardingSessionToRemoteHost --parameters '{"host":["${{ steps.get-rds-hostname.outputs.rds_hostname}}"],"portNumber":["5432"],"localPortNumber":["5555"]}'